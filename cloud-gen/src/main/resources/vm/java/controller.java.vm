package ${packageName}.controller;
#if($table.tree)
import java.util.Map;
import cn.hutool.core.bean.BeanUtil;
#end
import com.xxxJppp.cloud.common.base.BaseController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import ${packageName}.model.${ClassName};
import ${packageName}.service.I${ClassName}Service;
import com.xxxJppp.cloud.common.model.PageResult;
import com.xxxJppp.cloud.common.model.Result;

/**
 * ${functionName}
 *
 * @author ${author}
 * @date ${datetime}
 */
@Slf4j
@Api(tags = "${functionName}")
@RestController
@RequestMapping("${businessName}")
public class ${ClassName}Controller extends BaseController {
    @Autowired
    private I${ClassName}Service ${className}Service;

    /**
     * 查询列表
     */
    @ApiOperation(value = "查询列表")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "pageSize", value = "每页条数", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "pageNumber", value = "页码", required = true, dataType = "Integer"),
            @ApiImplicitParam(name = "sortField", value = "排序字段", dataType = "String"),
            @ApiImplicitParam(name = "sortOrder", value = "排序方式（升序asc或降序desc，不传默认升序）", dataType = "String")
    })
    @GetMapping("/list")
#if($table.crud)
    public PageResult list(${ClassName} ${className}) {
        Page page = getPage();
        return ${className}Service.findListByPage(page,${className});
    }
#elseif($table.tree)
    public Result list(${ClassName} ${className}) {
        Map<String, Object> map = BeanUtil.beanToMap(${className});
        return Result.succeed(${className}Service.listByMap(map));
    }
#end
    /**
     * 查询${tableComment}
     */
    @ApiOperation(value = "查询")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public Result get(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        ${ClassName} model = ${className}Service.getById(${pkColumn.javaField});
        return Result.succeed(model);
    }

    /**
     * 新增
     */
    @ApiOperation(value = "新增")
    @PostMapping
    public Result save(${ClassName} ${className}) {
        ${className}Service.save(${className});
        return Result.succeed();
    }

    /**
    * 编辑
    */
    @ApiOperation(value = "编辑")
    @PutMapping
    public Result update(${ClassName} ${className}) {
        ${className}Service.updateById(${className});
        return Result.succeed();
    }


    /**
     * 删除
     */
    @ApiOperation(value = "删除")
    @DeleteMapping("/{${pkColumn.javaField}}")
    public Result delete(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField}) {
        ${className}Service.removeById(${pkColumn.javaField});
        return Result.succeed();
    }
}
